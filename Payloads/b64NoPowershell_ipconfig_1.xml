<?xml version="1.0" encoding="utf-8" ?>
<catalog>
  <payload id ="Base64 Assembly">
    TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
    ZGUuDQ0KJAAAAAAAAABQRQAAZIYCAA1VX78AAAAAAAAAAPAAIgALAjAAAAoAAAAIAAAAAAAAAAAA
    AAAgAAAAAABAAQAAAAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAABgAAAAAgAAAAAAAAMAYIUAAEAA
    AAAAAABAAAAAAAAAAAAQAAAAAAAAIAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAs
    BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCkAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABIAAAAAAAAAAAAAAAudGV4dAAA
    ANsJAAAAIAAAAAoAAAACAAAAAAAAAAAAAAAAAAAgAABgLnJzcmMAAAAsBgAAAEAAAAAIAAAADAAA
    AAAAAAAAAAAAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABI
    AAAAAgAFANggAAA0CAAAAQAAAAEAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAbMAIAZgAAAAEAABEAKA8AAAoKBm8QAAAKAAZvEQAACgtyAQAAcAwHbxIA
    AAoIbxMAAAoAB28UAAAKDQAJbxUAAAoTBCsTEQRvFgAAChMFABEFKBcAAAoAABEEbxgAAAot5N4N
    EQQsCBEEbxkAAAoA3CoAAAEQAAACADgAIFgADQAAAAAiAigaAAAKACoAAABCU0pCAQABAAAAAAAM
    AAAAdjQuMC4zMDMxOQAAAAAFAGwAAABgAgAAI34AAMwCAADMAwAAI1N0cmluZ3MAAAAAmAYAABQA
    AAAjVVMArAYAABAAAAAjR1VJRAAAALwGAAB4AQAAI0Jsb2IAAAAAAAAAAgAAAUcVAggJAAAAAPoB
    MwAWAAABAAAAGgAAAAIAAAACAAAAAQAAABoAAAAOAAAAAQAAAAIAAAABAAAAAgAAAAAA+QEBAAAA
    AAAGAG4BSgMGANsBSgMGAKIA5AIPAGoDAAAGAMoAoAIGAFEBoAIGADIBoAIGAMIBoAIGAI4BoAIG
    AKcBoAIGAOEAoAIGALYAKwMGAJQAKwMGABUBoAIGAPwAMQIGAJMDcgIKAE8ABAMKAIMABAMGAAEA
    SwIKAJEDgwIGAA4ALgAKALkDBAMKALICBAMGAGsAcgIGAMQCfgMGAF8AcgIAAAAAHAAAAAAAAQAB
    AAEAEABqAgAAQQABAAEASCAAAAAAlgB+An8AAQDMIAAAAACGGN4CBgACAAAAAQB5AwkA3gIBABEA
    3gIGABkA3gIKACkA3gIQADEA3gIQADkA3gIQAEEA3gIQAEkA3gIQAFEA3gIQAFkA3gIQAGEA3gIV
    AGkA3gIQAHEA3gIQAHkA3gIQALEASQAwAIkAeQIGAIkAfQA1AJEA9wI6ALkApgMQAJEAWAA/AAwA
    0AJPABQAmgNfAMEAcwBkAMkAsANpANEAjAAGAIEA3gIGAC4ACwCFAC4AEwCOAC4AGwCtAC4AIwC2
    AC4AKwDVAC4AMwDVAC4AOwDVAC4AQwC2AC4ASwDbAC4AUwDVAC4AWwDVAC4AYwDzAC4AawAdAS4A
    cwAqARoASABYAASAAAABAAAAAAAAAAAAAAAAABcCAAAEAAAAAAAAAAAAAABtACUAAAAAAAMAAAAA
    AAAAAAAAAHYAgwIAAAAAAAAAAABDb2xsZWN0aW9uYDEASUVudW1lcmF0b3JgMQA8TW9kdWxlPgBt
    c2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBDcmVhdGVSdW5zcGFjZQBJbnZva2UA
    SURpc3Bvc2FibGUAQ29uc29sZQBXcml0ZUxpbmUAQ3JlYXRlUGlwZWxpbmUARGlzcG9zZQBHdWlk
    QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUAQ29tVmlzaWJsZUF0dHJpYnV0ZQBBc3NlbWJs
    eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
    a0F0dHJpYnV0ZQBBc3NlbWJseUZpbGVWZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
    dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVs
    YXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJp
    Z2h0QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
    eUF0dHJpYnV0ZQBQb3dlcnNoZWxsUGF5bG9hZElQY29uZmlnLmV4ZQBQb3dlcnNoZWxsUGF5bG9h
    ZElQY29uZmlnAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3lzdGVtLkNvbGxlY3Rpb25zLk9i
    amVjdE1vZGVsAFByb2dyYW0AU3lzdGVtAE9wZW4ATWFpbgBTeXN0ZW0uTWFuYWdlbWVudC5BdXRv
    bWF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAENvbW1hbmRDb2xsZWN0aW9uAElFbnVtZXJhdG9yAEdl
    dEVudW1lcmF0b3IALmN0b3IAU3lzdGVtLkRpYWdub3N0aWNzAGdldF9Db21tYW5kcwBTeXN0ZW0u
    TWFuYWdlbWVudC5BdXRvbWF0aW9uLlJ1bnNwYWNlcwBTeXN0ZW0uUnVudGltZS5JbnRlcm9wU2Vy
    dmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBEZWJ1Z2dpbmdNb2RlcwBhcmdz
    AFN5c3RlbS5Db2xsZWN0aW9ucwBQU09iamVjdABnZXRfQ3VycmVudABBZGRTY3JpcHQATW92ZU5l
    eHQAUnVuc3BhY2VGYWN0b3J5AAAAAAARaQBwAGMAbwBuAGYAaQBnAAAALt6BL5LS3E6LtieHU2jb
    WwAEIAEBCAMgAAEFIAEBEREEIAEBDgQgAQECFQcGEkUSSQ4VEk0BElEVElUBElESUQQAABJFBCAA
    EkkEIAASXQggABUSTQESUQYVEk0BElEIIAAVElUBEwAGFRJVARJRBCAAEwAEAAEBHAMgAAIIt3pc
    Vhk04IkIMb84Vq02TjUFAAEBHQ4IAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
    d3MBCAEABwEAAAAAHgEAGVBvd2Vyc2hlbGxQYXlsb2FkSVBjb25maWcAAAUBAAAAABcBABJDb3B5
    cmlnaHQgwqkgIDIwMTgAACkBACQ4ODRjNzA1Ni03YzFhLTRmOWMtOGU5OS05ZjU4ZmEzNDU3NzEA
    AAwBAAcxLjAuMC4wAABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjYuMQEAVA4URnJhbWV3
    b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC42LjEAAAAAtH6NjgAAAAACAAAAlwAAAEQp
    AABECwAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAFJTRFPHmoMau5vwSqZ95N4a7ZSCAQAA
    AEM6XFVzZXJzXFJTTWFkbWluXERlc2t0b3BcdGVzdFxQb3dlcnNoZWxsUGF5bG9hZElQY29uZmln
    XFBvd2Vyc2hlbGxQYXlsb2FkSVBjb25maWdcb2JqXHg2NFxEZWJ1Z1xQb3dlcnNoZWxsUGF5bG9h
    ZElQY29uZmlnLnBkYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAACABAAAAAgAACAGAAAAFAAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADgAAIAAAAAAAAAA
    AAAAAAAAAAEAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAEAAQAAAGgAAIAAAAAAAAAAAAAAAAAAAAEA
    AAAAACwEAACQQAAAnAMAAAAAAAAAAAAAnAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBG
    AE8AAAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAEAAAAAAAAAAAAAAAAA
    AABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABp
    AG8AbgAAAAAAAACwBPwCAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAANgCAAABADAA
    MAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBw
    AGEAbgB5AE4AYQBtAGUAAAAAAAAAAABcABoAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
    bgAAAAAAUABvAHcAZQByAHMAaABlAGwAbABQAGEAeQBsAG8AYQBkAEkAUABjAG8AbgBmAGkAZwAA
    ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAFwAHgABAEkA
    bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUABvAHcAZQByAHMAaABlAGwAbABQAGEAeQBsAG8AYQBk
    AEkAUABjAG8AbgBmAGkAZwAuAGUAeABlAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
    aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIACpACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBs
    AFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAABkAB4AAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwA
    ZQBuAGEAbQBlAAAAUABvAHcAZQByAHMAaABlAGwAbABQAGEAeQBsAG8AYQBkAEkAUABjAG8AbgBm
    AGkAZwAuAGUAeABlAAAAVAAaAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABQAG8AdwBlAHIA
    cwBoAGUAbABsAFAAYQB5AGwAbwBhAGQASQBQAGMAbwBuAGYAaQBnAAAANAAIAAEAUAByAG8AZAB1
    AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwA
    eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAPEQAAOoBAAAAAAAAAAAAAO+7vzw/
    eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04IiBzdGFuZGFsb25lPSJ5ZXMiPz4NCg0K
    PGFzc2VtYmx5IHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOmFzbS52MSIgbWFuaWZl
    c3RWZXJzaW9uPSIxLjAiPg0KICA8YXNzZW1ibHlJZGVudGl0eSB2ZXJzaW9uPSIxLjAuMC4wIiBu
    YW1lPSJNeUFwcGxpY2F0aW9uLmFwcCIvPg0KICA8dHJ1c3RJbmZvIHhtbG5zPSJ1cm46c2NoZW1h
    cy1taWNyb3NvZnQtY29tOmFzbS52MiI+DQogICAgPHNlY3VyaXR5Pg0KICAgICAgPHJlcXVlc3Rl
    ZFByaXZpbGVnZXMgeG1sbnM9InVybjpzY2hlbWFzLW1pY3Jvc29mdC1jb206YXNtLnYzIj4NCiAg
    ICAgICAgPHJlcXVlc3RlZEV4ZWN1dGlvbkxldmVsIGxldmVsPSJhc0ludm9rZXIiIHVpQWNjZXNz
    PSJmYWxzZSIvPg0KICAgICAgPC9yZXF1ZXN0ZWRQcml2aWxlZ2VzPg0KICAgIDwvc2VjdXJpdHk+
    DQogIDwvdHJ1c3RJbmZvPg0KPC9hc3NlbWJseT4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
  </payload>
  <args id ="args"></args>
  <args id ="args"></args>
</catalog>

<!-- This runs a base64 assembly that uses C# to run the powershell command ipconfig
     it is here for testing purposes only and was compiled for x64 architecture
     
     Use this with stager that pulls base64 assembly in memory like sharpcradle
     Example stagers that were provided that this would work with are the following
     
     SharpNado_HTTP_WCF_Base64
     SharpNado_HTTP_WCF_Base64_Encrypted
     SharpNado_HTTP_WCF_Base64_Logic (sandbox evasion)
     SharpNado_TCP_WCF_Base64
     SharpNado_TCP_Remoting_Base64
     -->